// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ParamChange param change
//
// swagger:model ParamChange
type ParamChange struct {

	// key
	// Required: true
	Key *string `json:"key"`

	// subkey
	// Required: true
	Subkey *string `json:"subkey"`

	// subspace
	// Required: true
	Subspace *string `json:"subspace"`

	// value
	// Required: true
	Value interface{} `json:"value"`
}

// Validate validates this param change
func (m *ParamChange) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubkey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubspace(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ParamChange) validateKey(formats strfmt.Registry) error {

	if err := validate.Required("key", "body", m.Key); err != nil {
		return err
	}

	return nil
}

func (m *ParamChange) validateSubkey(formats strfmt.Registry) error {

	if err := validate.Required("subkey", "body", m.Subkey); err != nil {
		return err
	}

	return nil
}

func (m *ParamChange) validateSubspace(formats strfmt.Registry) error {

	if err := validate.Required("subspace", "body", m.Subspace); err != nil {
		return err
	}

	return nil
}

func (m *ParamChange) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ParamChange) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ParamChange) UnmarshalBinary(b []byte) error {
	var res ParamChange
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
