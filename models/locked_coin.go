// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LockedCoin locked coin
//
// swagger:model LockedCoin
type LockedCoin struct {

	// coin
	// Required: true
	Coin *Coin `json:"coin"`

	// from address
	FromAddress string `json:"from_address,omitempty"`

	// reward
	Reward string `json:"reward,omitempty"`

	// supervisor
	Supervisor string `json:"supervisor,omitempty"`

	// unlock time
	// Required: true
	UnlockTime *string `json:"unlock_time"`
}

// Validate validates this locked coin
func (m *LockedCoin) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCoin(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUnlockTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LockedCoin) validateCoin(formats strfmt.Registry) error {

	if err := validate.Required("coin", "body", m.Coin); err != nil {
		return err
	}

	if m.Coin != nil {
		if err := m.Coin.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("coin")
			}
			return err
		}
	}

	return nil
}

func (m *LockedCoin) validateUnlockTime(formats strfmt.Registry) error {

	if err := validate.Required("unlock_time", "body", m.UnlockTime); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LockedCoin) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LockedCoin) UnmarshalBinary(b []byte) error {
	var res LockedCoin
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
