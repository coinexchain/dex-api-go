// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Redelegation redelegation
//
// swagger:model Redelegation
type Redelegation struct {

	// delegator address
	// Required: true
	DelegatorAddress *string `json:"delegator_address"`

	// entries
	// Required: true
	Entries []*RedelegationEntry `json:"entries"`

	// validator dst address
	// Required: true
	ValidatorDstAddress *string `json:"validator_dst_address"`

	// validator src address
	// Required: true
	ValidatorSrcAddress *string `json:"validator_src_address"`
}

// Validate validates this redelegation
func (m *Redelegation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDelegatorAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEntries(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValidatorDstAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValidatorSrcAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Redelegation) validateDelegatorAddress(formats strfmt.Registry) error {

	if err := validate.Required("delegator_address", "body", m.DelegatorAddress); err != nil {
		return err
	}

	return nil
}

func (m *Redelegation) validateEntries(formats strfmt.Registry) error {

	if err := validate.Required("entries", "body", m.Entries); err != nil {
		return err
	}

	for i := 0; i < len(m.Entries); i++ {
		if swag.IsZero(m.Entries[i]) { // not required
			continue
		}

		if m.Entries[i] != nil {
			if err := m.Entries[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("entries" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *Redelegation) validateValidatorDstAddress(formats strfmt.Registry) error {

	if err := validate.Required("validator_dst_address", "body", m.ValidatorDstAddress); err != nil {
		return err
	}

	return nil
}

func (m *Redelegation) validateValidatorSrcAddress(formats strfmt.Registry) error {

	if err := validate.Required("validator_src_address", "body", m.ValidatorSrcAddress); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Redelegation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Redelegation) UnmarshalBinary(b []byte) error {
	var res Redelegation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
