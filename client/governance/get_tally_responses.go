// Code generated by go-swagger; DO NOT EDIT.

package governance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/coinexchain/dex-api-go/models"
)

// GetTallyReader is a Reader for the GetTally structure.
type GetTallyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTallyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTallyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTallyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTallyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTallyOK creates a GetTallyOK with default headers values
func NewGetTallyOK() *GetTallyOK {
	return &GetTallyOK{}
}

/*GetTallyOK handles this case with default header values.

OK
*/
type GetTallyOK struct {
	Payload *GetTallyOKBody
}

func (o *GetTallyOK) Error() string {
	return fmt.Sprintf("[GET /gov/proposals/{proposalId}/tally][%d] getTallyOK  %+v", 200, o.Payload)
}

func (o *GetTallyOK) GetPayload() *GetTallyOKBody {
	return o.Payload
}

func (o *GetTallyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTallyOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTallyBadRequest creates a GetTallyBadRequest with default headers values
func NewGetTallyBadRequest() *GetTallyBadRequest {
	return &GetTallyBadRequest{}
}

/*GetTallyBadRequest handles this case with default header values.

Invalid proposal id
*/
type GetTallyBadRequest struct {
}

func (o *GetTallyBadRequest) Error() string {
	return fmt.Sprintf("[GET /gov/proposals/{proposalId}/tally][%d] getTallyBadRequest ", 400)
}

func (o *GetTallyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTallyInternalServerError creates a GetTallyInternalServerError with default headers values
func NewGetTallyInternalServerError() *GetTallyInternalServerError {
	return &GetTallyInternalServerError{}
}

/*GetTallyInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetTallyInternalServerError struct {
}

func (o *GetTallyInternalServerError) Error() string {
	return fmt.Sprintf("[GET /gov/proposals/{proposalId}/tally][%d] getTallyInternalServerError ", 500)
}

func (o *GetTallyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetTallyOKBody get tally o k body
swagger:model GetTallyOKBody
*/
type GetTallyOKBody struct {

	// height
	Height string `json:"height,omitempty"`

	// result
	Result *models.TallyResult `json:"result,omitempty"`
}

// Validate validates this get tally o k body
func (o *GetTallyOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTallyOKBody) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(o.Result) { // not required
		return nil
	}

	if o.Result != nil {
		if err := o.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getTallyOK" + "." + "result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTallyOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTallyOKBody) UnmarshalBinary(b []byte) error {
	var res GetTallyOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
