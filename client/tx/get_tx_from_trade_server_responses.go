// Code generated by go-swagger; DO NOT EDIT.

package tx

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/coinexchain/dex-api-go/models"
)

// GetTxFromTradeServerReader is a Reader for the GetTxFromTradeServer structure.
type GetTxFromTradeServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTxFromTradeServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTxFromTradeServerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetTxFromTradeServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTxFromTradeServerOK creates a GetTxFromTradeServerOK with default headers values
func NewGetTxFromTradeServerOK() *GetTxFromTradeServerOK {
	return &GetTxFromTradeServerOK{}
}

/*GetTxFromTradeServerOK handles this case with default header values.

Tx with the provided hash
*/
type GetTxFromTradeServerOK struct {
	Payload *models.Tx
}

func (o *GetTxFromTradeServerOK) Error() string {
	return fmt.Sprintf("[GET /tx/txs/{hash}][%d] getTxFromTradeServerOK  %+v", 200, o.Payload)
}

func (o *GetTxFromTradeServerOK) GetPayload() *models.Tx {
	return o.Payload
}

func (o *GetTxFromTradeServerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Tx)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTxFromTradeServerInternalServerError creates a GetTxFromTradeServerInternalServerError with default headers values
func NewGetTxFromTradeServerInternalServerError() *GetTxFromTradeServerInternalServerError {
	return &GetTxFromTradeServerInternalServerError{}
}

/*GetTxFromTradeServerInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetTxFromTradeServerInternalServerError struct {
}

func (o *GetTxFromTradeServerInternalServerError) Error() string {
	return fmt.Sprintf("[GET /tx/txs/{hash}][%d] getTxFromTradeServerInternalServerError ", 500)
}

func (o *GetTxFromTradeServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
