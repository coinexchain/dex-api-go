// Code generated by go-swagger; DO NOT EDIT.

package expiry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewQueryUnbondingParams creates a new QueryUnbondingParams object
// with the default values initialized.
func NewQueryUnbondingParams() *QueryUnbondingParams {
	var ()
	return &QueryUnbondingParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewQueryUnbondingParamsWithTimeout creates a new QueryUnbondingParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewQueryUnbondingParamsWithTimeout(timeout time.Duration) *QueryUnbondingParams {
	var ()
	return &QueryUnbondingParams{

		timeout: timeout,
	}
}

// NewQueryUnbondingParamsWithContext creates a new QueryUnbondingParams object
// with the default values initialized, and the ability to set a context for a request
func NewQueryUnbondingParamsWithContext(ctx context.Context) *QueryUnbondingParams {
	var ()
	return &QueryUnbondingParams{

		Context: ctx,
	}
}

// NewQueryUnbondingParamsWithHTTPClient creates a new QueryUnbondingParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewQueryUnbondingParamsWithHTTPClient(client *http.Client) *QueryUnbondingParams {
	var ()
	return &QueryUnbondingParams{
		HTTPClient: client,
	}
}

/*QueryUnbondingParams contains all the parameters to send to the API endpoint
for the query unbonding operation typically these are written to a http.Request
*/
type QueryUnbondingParams struct {

	/*Account
	  Bech32 address

	*/
	Account string
	/*Count
	  Querier count

	*/
	Count int32
	/*Sid
	  Sequence id

	*/
	Sid int64
	/*Time
	  Unix timestamp

	*/
	Time int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the query unbonding params
func (o *QueryUnbondingParams) WithTimeout(timeout time.Duration) *QueryUnbondingParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the query unbonding params
func (o *QueryUnbondingParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the query unbonding params
func (o *QueryUnbondingParams) WithContext(ctx context.Context) *QueryUnbondingParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the query unbonding params
func (o *QueryUnbondingParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the query unbonding params
func (o *QueryUnbondingParams) WithHTTPClient(client *http.Client) *QueryUnbondingParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the query unbonding params
func (o *QueryUnbondingParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccount adds the account to the query unbonding params
func (o *QueryUnbondingParams) WithAccount(account string) *QueryUnbondingParams {
	o.SetAccount(account)
	return o
}

// SetAccount adds the account to the query unbonding params
func (o *QueryUnbondingParams) SetAccount(account string) {
	o.Account = account
}

// WithCount adds the count to the query unbonding params
func (o *QueryUnbondingParams) WithCount(count int32) *QueryUnbondingParams {
	o.SetCount(count)
	return o
}

// SetCount adds the count to the query unbonding params
func (o *QueryUnbondingParams) SetCount(count int32) {
	o.Count = count
}

// WithSid adds the sid to the query unbonding params
func (o *QueryUnbondingParams) WithSid(sid int64) *QueryUnbondingParams {
	o.SetSid(sid)
	return o
}

// SetSid adds the sid to the query unbonding params
func (o *QueryUnbondingParams) SetSid(sid int64) {
	o.Sid = sid
}

// WithTime adds the time to the query unbonding params
func (o *QueryUnbondingParams) WithTime(time int64) *QueryUnbondingParams {
	o.SetTime(time)
	return o
}

// SetTime adds the time to the query unbonding params
func (o *QueryUnbondingParams) SetTime(time int64) {
	o.Time = time
}

// WriteToRequest writes these params to a swagger request
func (o *QueryUnbondingParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param account
	qrAccount := o.Account
	qAccount := qrAccount
	if qAccount != "" {
		if err := r.SetQueryParam("account", qAccount); err != nil {
			return err
		}
	}

	// query param count
	qrCount := o.Count
	qCount := swag.FormatInt32(qrCount)
	if qCount != "" {
		if err := r.SetQueryParam("count", qCount); err != nil {
			return err
		}
	}

	// query param sid
	qrSid := o.Sid
	qSid := swag.FormatInt64(qrSid)
	if qSid != "" {
		if err := r.SetQueryParam("sid", qSid); err != nil {
			return err
		}
	}

	// query param time
	qrTime := o.Time
	qTime := swag.FormatInt64(qrTime)
	if qTime != "" {
		if err := r.SetQueryParam("time", qTime); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
