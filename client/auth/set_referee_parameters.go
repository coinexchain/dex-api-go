// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewSetRefereeParams creates a new SetRefereeParams object
// with the default values initialized.
func NewSetRefereeParams() *SetRefereeParams {
	var ()
	return &SetRefereeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSetRefereeParamsWithTimeout creates a new SetRefereeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSetRefereeParamsWithTimeout(timeout time.Duration) *SetRefereeParams {
	var ()
	return &SetRefereeParams{

		timeout: timeout,
	}
}

// NewSetRefereeParamsWithContext creates a new SetRefereeParams object
// with the default values initialized, and the ability to set a context for a request
func NewSetRefereeParamsWithContext(ctx context.Context) *SetRefereeParams {
	var ()
	return &SetRefereeParams{

		Context: ctx,
	}
}

// NewSetRefereeParamsWithHTTPClient creates a new SetRefereeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSetRefereeParamsWithHTTPClient(client *http.Client) *SetRefereeParams {
	var ()
	return &SetRefereeParams{
		HTTPClient: client,
	}
}

/*SetRefereeParams contains all the parameters to send to the API endpoint
for the set referee operation typically these are written to a http.Request
*/
type SetRefereeParams struct {

	/*Address
	  Account address in bech32 format

	*/
	Address string
	/*Referee
	  Referee

	*/
	Referee SetRefereeBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the set referee params
func (o *SetRefereeParams) WithTimeout(timeout time.Duration) *SetRefereeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set referee params
func (o *SetRefereeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set referee params
func (o *SetRefereeParams) WithContext(ctx context.Context) *SetRefereeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set referee params
func (o *SetRefereeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set referee params
func (o *SetRefereeParams) WithHTTPClient(client *http.Client) *SetRefereeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set referee params
func (o *SetRefereeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddress adds the address to the set referee params
func (o *SetRefereeParams) WithAddress(address string) *SetRefereeParams {
	o.SetAddress(address)
	return o
}

// SetAddress adds the address to the set referee params
func (o *SetRefereeParams) SetAddress(address string) {
	o.Address = address
}

// WithReferee adds the referee to the set referee params
func (o *SetRefereeParams) WithReferee(referee SetRefereeBody) *SetRefereeParams {
	o.SetReferee(referee)
	return o
}

// SetReferee adds the referee to the set referee params
func (o *SetRefereeParams) SetReferee(referee SetRefereeBody) {
	o.Referee = referee
}

// WriteToRequest writes these params to a swagger request
func (o *SetRefereeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param address
	if err := r.SetPathParam("address", o.Address); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.Referee); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
