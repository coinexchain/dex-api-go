// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/coinexchain/dex-api-go/models"
)

// SetRefereeReader is a Reader for the SetReferee structure.
type SetRefereeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetRefereeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetRefereeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSetRefereeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSetRefereeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSetRefereeOK creates a SetRefereeOK with default headers values
func NewSetRefereeOK() *SetRefereeOK {
	return &SetRefereeOK{}
}

/*SetRefereeOK handles this case with default header values.

Tx was succesfully generated
*/
type SetRefereeOK struct {
	Payload *models.StdTx
}

func (o *SetRefereeOK) Error() string {
	return fmt.Sprintf("[POST /auth/accounts/{address}/referee][%d] setRefereeOK  %+v", 200, o.Payload)
}

func (o *SetRefereeOK) GetPayload() *models.StdTx {
	return o.Payload
}

func (o *SetRefereeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StdTx)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetRefereeBadRequest creates a SetRefereeBadRequest with default headers values
func NewSetRefereeBadRequest() *SetRefereeBadRequest {
	return &SetRefereeBadRequest{}
}

/*SetRefereeBadRequest handles this case with default header values.

Invalid request
*/
type SetRefereeBadRequest struct {
}

func (o *SetRefereeBadRequest) Error() string {
	return fmt.Sprintf("[POST /auth/accounts/{address}/referee][%d] setRefereeBadRequest ", 400)
}

func (o *SetRefereeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetRefereeInternalServerError creates a SetRefereeInternalServerError with default headers values
func NewSetRefereeInternalServerError() *SetRefereeInternalServerError {
	return &SetRefereeInternalServerError{}
}

/*SetRefereeInternalServerError handles this case with default header values.

Server internal error
*/
type SetRefereeInternalServerError struct {
}

func (o *SetRefereeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /auth/accounts/{address}/referee][%d] setRefereeInternalServerError ", 500)
}

func (o *SetRefereeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*SetRefereeBody set referee body
swagger:model SetRefereeBody
*/
type SetRefereeBody struct {

	// base req
	// Required: true
	BaseReq *models.BaseReq `json:"base_req"`

	// referee
	// Required: true
	Referee *string `json:"referee"`
}

// Validate validates this set referee body
func (o *SetRefereeBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBaseReq(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateReferee(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SetRefereeBody) validateBaseReq(formats strfmt.Registry) error {

	if err := validate.Required("referee"+"."+"base_req", "body", o.BaseReq); err != nil {
		return err
	}

	if o.BaseReq != nil {
		if err := o.BaseReq.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("referee" + "." + "base_req")
			}
			return err
		}
	}

	return nil
}

func (o *SetRefereeBody) validateReferee(formats strfmt.Registry) error {

	if err := validate.Required("referee"+"."+"referee", "body", o.Referee); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SetRefereeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SetRefereeBody) UnmarshalBinary(b []byte) error {
	var res SetRefereeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
