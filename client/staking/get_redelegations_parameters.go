// Code generated by go-swagger; DO NOT EDIT.

package staking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetRedelegationsParams creates a new GetRedelegationsParams object
// with the default values initialized.
func NewGetRedelegationsParams() *GetRedelegationsParams {
	var ()
	return &GetRedelegationsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetRedelegationsParamsWithTimeout creates a new GetRedelegationsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetRedelegationsParamsWithTimeout(timeout time.Duration) *GetRedelegationsParams {
	var ()
	return &GetRedelegationsParams{

		timeout: timeout,
	}
}

// NewGetRedelegationsParamsWithContext creates a new GetRedelegationsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetRedelegationsParamsWithContext(ctx context.Context) *GetRedelegationsParams {
	var ()
	return &GetRedelegationsParams{

		Context: ctx,
	}
}

// NewGetRedelegationsParamsWithHTTPClient creates a new GetRedelegationsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetRedelegationsParamsWithHTTPClient(client *http.Client) *GetRedelegationsParams {
	var ()
	return &GetRedelegationsParams{
		HTTPClient: client,
	}
}

/*GetRedelegationsParams contains all the parameters to send to the API endpoint
for the get redelegations operation typically these are written to a http.Request
*/
type GetRedelegationsParams struct {

	/*Delegator
	  Bech32 AccAddress of Delegator

	*/
	Delegator *string
	/*ValidatorFrom
	  Bech32 ValAddress of SrcValidator

	*/
	ValidatorFrom *string
	/*ValidatorTo
	  Bech32 ValAddress of DstValidator

	*/
	ValidatorTo *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get redelegations params
func (o *GetRedelegationsParams) WithTimeout(timeout time.Duration) *GetRedelegationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get redelegations params
func (o *GetRedelegationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get redelegations params
func (o *GetRedelegationsParams) WithContext(ctx context.Context) *GetRedelegationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get redelegations params
func (o *GetRedelegationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get redelegations params
func (o *GetRedelegationsParams) WithHTTPClient(client *http.Client) *GetRedelegationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get redelegations params
func (o *GetRedelegationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDelegator adds the delegator to the get redelegations params
func (o *GetRedelegationsParams) WithDelegator(delegator *string) *GetRedelegationsParams {
	o.SetDelegator(delegator)
	return o
}

// SetDelegator adds the delegator to the get redelegations params
func (o *GetRedelegationsParams) SetDelegator(delegator *string) {
	o.Delegator = delegator
}

// WithValidatorFrom adds the validatorFrom to the get redelegations params
func (o *GetRedelegationsParams) WithValidatorFrom(validatorFrom *string) *GetRedelegationsParams {
	o.SetValidatorFrom(validatorFrom)
	return o
}

// SetValidatorFrom adds the validatorFrom to the get redelegations params
func (o *GetRedelegationsParams) SetValidatorFrom(validatorFrom *string) {
	o.ValidatorFrom = validatorFrom
}

// WithValidatorTo adds the validatorTo to the get redelegations params
func (o *GetRedelegationsParams) WithValidatorTo(validatorTo *string) *GetRedelegationsParams {
	o.SetValidatorTo(validatorTo)
	return o
}

// SetValidatorTo adds the validatorTo to the get redelegations params
func (o *GetRedelegationsParams) SetValidatorTo(validatorTo *string) {
	o.ValidatorTo = validatorTo
}

// WriteToRequest writes these params to a swagger request
func (o *GetRedelegationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Delegator != nil {

		// query param delegator
		var qrDelegator string
		if o.Delegator != nil {
			qrDelegator = *o.Delegator
		}
		qDelegator := qrDelegator
		if qDelegator != "" {
			if err := r.SetQueryParam("delegator", qDelegator); err != nil {
				return err
			}
		}

	}

	if o.ValidatorFrom != nil {

		// query param validator_from
		var qrValidatorFrom string
		if o.ValidatorFrom != nil {
			qrValidatorFrom = *o.ValidatorFrom
		}
		qValidatorFrom := qrValidatorFrom
		if qValidatorFrom != "" {
			if err := r.SetQueryParam("validator_from", qValidatorFrom); err != nil {
				return err
			}
		}

	}

	if o.ValidatorTo != nil {

		// query param validator_to
		var qrValidatorTo string
		if o.ValidatorTo != nil {
			qrValidatorTo = *o.ValidatorTo
		}
		qValidatorTo := qrValidatorTo
		if qValidatorTo != "" {
			if err := r.SetQueryParam("validator_to", qValidatorTo); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
