// Code generated by go-swagger; DO NOT EDIT.

package staking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/coinexchain/dex-api-go/models"
)

// UndelegateReader is a Reader for the Undelegate structure.
type UndelegateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UndelegateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUndelegateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUndelegateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUndelegateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUndelegateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUndelegateOK creates a UndelegateOK with default headers values
func NewUndelegateOK() *UndelegateOK {
	return &UndelegateOK{}
}

/*UndelegateOK handles this case with default header values.

OK
*/
type UndelegateOK struct {
	Payload *models.BroadcastTxCommitResult
}

func (o *UndelegateOK) Error() string {
	return fmt.Sprintf("[POST /staking/delegators/{delegatorAddr}/unbonding_delegations][%d] undelegateOK  %+v", 200, o.Payload)
}

func (o *UndelegateOK) GetPayload() *models.BroadcastTxCommitResult {
	return o.Payload
}

func (o *UndelegateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BroadcastTxCommitResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUndelegateBadRequest creates a UndelegateBadRequest with default headers values
func NewUndelegateBadRequest() *UndelegateBadRequest {
	return &UndelegateBadRequest{}
}

/*UndelegateBadRequest handles this case with default header values.

Invalid delegator address or unbonding delegation request body
*/
type UndelegateBadRequest struct {
}

func (o *UndelegateBadRequest) Error() string {
	return fmt.Sprintf("[POST /staking/delegators/{delegatorAddr}/unbonding_delegations][%d] undelegateBadRequest ", 400)
}

func (o *UndelegateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUndelegateUnauthorized creates a UndelegateUnauthorized with default headers values
func NewUndelegateUnauthorized() *UndelegateUnauthorized {
	return &UndelegateUnauthorized{}
}

/*UndelegateUnauthorized handles this case with default header values.

Key password is wrong
*/
type UndelegateUnauthorized struct {
}

func (o *UndelegateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /staking/delegators/{delegatorAddr}/unbonding_delegations][%d] undelegateUnauthorized ", 401)
}

func (o *UndelegateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUndelegateInternalServerError creates a UndelegateInternalServerError with default headers values
func NewUndelegateInternalServerError() *UndelegateInternalServerError {
	return &UndelegateInternalServerError{}
}

/*UndelegateInternalServerError handles this case with default header values.

Internal Server Error
*/
type UndelegateInternalServerError struct {
}

func (o *UndelegateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /staking/delegators/{delegatorAddr}/unbonding_delegations][%d] undelegateInternalServerError ", 500)
}

func (o *UndelegateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*UndelegateBody undelegate body
swagger:model UndelegateBody
*/
type UndelegateBody struct {

	// amount
	// Required: true
	Amount *models.Coin `json:"amount"`

	// base req
	// Required: true
	BaseReq *models.BaseReq `json:"base_req"`

	// delegator address
	// Required: true
	DelegatorAddress models.Address `json:"delegator_address"`

	// validator address
	// Required: true
	ValidatorAddress models.ValidatorAddress `json:"validator_address"`
}

// Validate validates this undelegate body
func (o *UndelegateBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBaseReq(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDelegatorAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValidatorAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UndelegateBody) validateAmount(formats strfmt.Registry) error {

	if err := validate.Required("delegation"+"."+"amount", "body", o.Amount); err != nil {
		return err
	}

	if o.Amount != nil {
		if err := o.Amount.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("delegation" + "." + "amount")
			}
			return err
		}
	}

	return nil
}

func (o *UndelegateBody) validateBaseReq(formats strfmt.Registry) error {

	if err := validate.Required("delegation"+"."+"base_req", "body", o.BaseReq); err != nil {
		return err
	}

	if o.BaseReq != nil {
		if err := o.BaseReq.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("delegation" + "." + "base_req")
			}
			return err
		}
	}

	return nil
}

func (o *UndelegateBody) validateDelegatorAddress(formats strfmt.Registry) error {

	if err := o.DelegatorAddress.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("delegation" + "." + "delegator_address")
		}
		return err
	}

	return nil
}

func (o *UndelegateBody) validateValidatorAddress(formats strfmt.Registry) error {

	if err := o.ValidatorAddress.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("delegation" + "." + "validator_address")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UndelegateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UndelegateBody) UnmarshalBinary(b []byte) error {
	var res UndelegateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
