// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/coinexchain/dex-api-go/models"
)

// QueryTickersReader is a Reader for the QueryTickers structure.
type QueryTickersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QueryTickersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewQueryTickersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewQueryTickersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewQueryTickersOK creates a QueryTickersOK with default headers values
func NewQueryTickersOK() *QueryTickersOK {
	return &QueryTickersOK{}
}

/*QueryTickersOK handles this case with default header values.

OK
*/
type QueryTickersOK struct {
	Payload []*models.Tickers
}

func (o *QueryTickersOK) Error() string {
	return fmt.Sprintf("[GET /market/tickers][%d] queryTickersOK  %+v", 200, o.Payload)
}

func (o *QueryTickersOK) GetPayload() []*models.Tickers {
	return o.Payload
}

func (o *QueryTickersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryTickersInternalServerError creates a QueryTickersInternalServerError with default headers values
func NewQueryTickersInternalServerError() *QueryTickersInternalServerError {
	return &QueryTickersInternalServerError{}
}

/*QueryTickersInternalServerError handles this case with default header values.

Server internal error
*/
type QueryTickersInternalServerError struct {
}

func (o *QueryTickersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /market/tickers][%d] queryTickersInternalServerError ", 500)
}

func (o *QueryTickersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
