// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/coinexchain/dex-api-go/models"
)

// CreateGteOrderReader is a Reader for the CreateGteOrder structure.
type CreateGteOrderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateGteOrderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateGteOrderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateGteOrderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateGteOrderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateGteOrderOK creates a CreateGteOrderOK with default headers values
func NewCreateGteOrderOK() *CreateGteOrderOK {
	return &CreateGteOrderOK{}
}

/*CreateGteOrderOK handles this case with default header values.

Tx was succesfully generated
*/
type CreateGteOrderOK struct {
	Payload *models.StdTx
}

func (o *CreateGteOrderOK) Error() string {
	return fmt.Sprintf("[POST /market/gte-orders][%d] createGteOrderOK  %+v", 200, o.Payload)
}

func (o *CreateGteOrderOK) GetPayload() *models.StdTx {
	return o.Payload
}

func (o *CreateGteOrderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StdTx)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGteOrderBadRequest creates a CreateGteOrderBadRequest with default headers values
func NewCreateGteOrderBadRequest() *CreateGteOrderBadRequest {
	return &CreateGteOrderBadRequest{}
}

/*CreateGteOrderBadRequest handles this case with default header values.

Invalid request
*/
type CreateGteOrderBadRequest struct {
}

func (o *CreateGteOrderBadRequest) Error() string {
	return fmt.Sprintf("[POST /market/gte-orders][%d] createGteOrderBadRequest ", 400)
}

func (o *CreateGteOrderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateGteOrderInternalServerError creates a CreateGteOrderInternalServerError with default headers values
func NewCreateGteOrderInternalServerError() *CreateGteOrderInternalServerError {
	return &CreateGteOrderInternalServerError{}
}

/*CreateGteOrderInternalServerError handles this case with default header values.

Server internal error
*/
type CreateGteOrderInternalServerError struct {
}

func (o *CreateGteOrderInternalServerError) Error() string {
	return fmt.Sprintf("[POST /market/gte-orders][%d] createGteOrderInternalServerError ", 500)
}

func (o *CreateGteOrderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*CreateGteOrderBody create gte order body
swagger:model CreateGteOrderBody
*/
type CreateGteOrderBody struct {

	// base req
	BaseReq *models.BaseReq `json:"base_req,omitempty"`

	// exist blocks
	ExistBlocks string `json:"exist_blocks,omitempty"`

	models.Order
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *CreateGteOrderBody) UnmarshalJSON(raw []byte) error {
	// CreateGteOrderParamsBodyAO0
	var dataCreateGteOrderParamsBodyAO0 struct {
		BaseReq *models.BaseReq `json:"base_req,omitempty"`

		ExistBlocks string `json:"exist_blocks,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataCreateGteOrderParamsBodyAO0); err != nil {
		return err
	}

	o.BaseReq = dataCreateGteOrderParamsBodyAO0.BaseReq

	o.ExistBlocks = dataCreateGteOrderParamsBodyAO0.ExistBlocks

	// CreateGteOrderParamsBodyAO1
	var createGteOrderParamsBodyAO1 models.Order
	if err := swag.ReadJSON(raw, &createGteOrderParamsBodyAO1); err != nil {
		return err
	}
	o.Order = createGteOrderParamsBodyAO1

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o CreateGteOrderBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataCreateGteOrderParamsBodyAO0 struct {
		BaseReq *models.BaseReq `json:"base_req,omitempty"`

		ExistBlocks string `json:"exist_blocks,omitempty"`
	}

	dataCreateGteOrderParamsBodyAO0.BaseReq = o.BaseReq

	dataCreateGteOrderParamsBodyAO0.ExistBlocks = o.ExistBlocks

	jsonDataCreateGteOrderParamsBodyAO0, errCreateGteOrderParamsBodyAO0 := swag.WriteJSON(dataCreateGteOrderParamsBodyAO0)
	if errCreateGteOrderParamsBodyAO0 != nil {
		return nil, errCreateGteOrderParamsBodyAO0
	}
	_parts = append(_parts, jsonDataCreateGteOrderParamsBodyAO0)

	createGteOrderParamsBodyAO1, err := swag.WriteJSON(o.Order)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, createGteOrderParamsBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this create gte order body
func (o *CreateGteOrderBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBaseReq(formats); err != nil {
		res = append(res, err)
	}

	// validation for a type composition with models.Order
	if err := o.Order.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateGteOrderBody) validateBaseReq(formats strfmt.Registry) error {

	if swag.IsZero(o.BaseReq) { // not required
		return nil
	}

	if o.BaseReq != nil {
		if err := o.BaseReq.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("orderInfo" + "." + "base_req")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateGteOrderBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateGteOrderBody) UnmarshalBinary(b []byte) error {
	var res CreateGteOrderBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
