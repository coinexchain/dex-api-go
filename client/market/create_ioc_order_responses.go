// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/coinexchain/dex-api-go/models"
)

// CreateIocOrderReader is a Reader for the CreateIocOrder structure.
type CreateIocOrderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateIocOrderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateIocOrderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateIocOrderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateIocOrderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateIocOrderOK creates a CreateIocOrderOK with default headers values
func NewCreateIocOrderOK() *CreateIocOrderOK {
	return &CreateIocOrderOK{}
}

/*CreateIocOrderOK handles this case with default header values.

Tx was succesfully generated
*/
type CreateIocOrderOK struct {
	Payload *models.StdTx
}

func (o *CreateIocOrderOK) Error() string {
	return fmt.Sprintf("[POST /market/ioc-orders][%d] createIocOrderOK  %+v", 200, o.Payload)
}

func (o *CreateIocOrderOK) GetPayload() *models.StdTx {
	return o.Payload
}

func (o *CreateIocOrderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StdTx)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIocOrderBadRequest creates a CreateIocOrderBadRequest with default headers values
func NewCreateIocOrderBadRequest() *CreateIocOrderBadRequest {
	return &CreateIocOrderBadRequest{}
}

/*CreateIocOrderBadRequest handles this case with default header values.

Invalid request
*/
type CreateIocOrderBadRequest struct {
}

func (o *CreateIocOrderBadRequest) Error() string {
	return fmt.Sprintf("[POST /market/ioc-orders][%d] createIocOrderBadRequest ", 400)
}

func (o *CreateIocOrderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateIocOrderInternalServerError creates a CreateIocOrderInternalServerError with default headers values
func NewCreateIocOrderInternalServerError() *CreateIocOrderInternalServerError {
	return &CreateIocOrderInternalServerError{}
}

/*CreateIocOrderInternalServerError handles this case with default header values.

Server internal error
*/
type CreateIocOrderInternalServerError struct {
}

func (o *CreateIocOrderInternalServerError) Error() string {
	return fmt.Sprintf("[POST /market/ioc-orders][%d] createIocOrderInternalServerError ", 500)
}

func (o *CreateIocOrderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*CreateIocOrderBody create ioc order body
swagger:model CreateIocOrderBody
*/
type CreateIocOrderBody struct {

	// base req
	BaseReq *models.BaseReq `json:"base_req,omitempty"`

	models.Order
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *CreateIocOrderBody) UnmarshalJSON(raw []byte) error {
	// CreateIocOrderParamsBodyAO0
	var dataCreateIocOrderParamsBodyAO0 struct {
		BaseReq *models.BaseReq `json:"base_req,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataCreateIocOrderParamsBodyAO0); err != nil {
		return err
	}

	o.BaseReq = dataCreateIocOrderParamsBodyAO0.BaseReq

	// CreateIocOrderParamsBodyAO1
	var createIocOrderParamsBodyAO1 models.Order
	if err := swag.ReadJSON(raw, &createIocOrderParamsBodyAO1); err != nil {
		return err
	}
	o.Order = createIocOrderParamsBodyAO1

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o CreateIocOrderBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataCreateIocOrderParamsBodyAO0 struct {
		BaseReq *models.BaseReq `json:"base_req,omitempty"`
	}

	dataCreateIocOrderParamsBodyAO0.BaseReq = o.BaseReq

	jsonDataCreateIocOrderParamsBodyAO0, errCreateIocOrderParamsBodyAO0 := swag.WriteJSON(dataCreateIocOrderParamsBodyAO0)
	if errCreateIocOrderParamsBodyAO0 != nil {
		return nil, errCreateIocOrderParamsBodyAO0
	}
	_parts = append(_parts, jsonDataCreateIocOrderParamsBodyAO0)

	createIocOrderParamsBodyAO1, err := swag.WriteJSON(o.Order)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, createIocOrderParamsBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this create ioc order body
func (o *CreateIocOrderBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBaseReq(formats); err != nil {
		res = append(res, err)
	}

	// validation for a type composition with models.Order
	if err := o.Order.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateIocOrderBody) validateBaseReq(formats strfmt.Registry) error {

	if swag.IsZero(o.BaseReq) { // not required
		return nil
	}

	if o.BaseReq != nil {
		if err := o.BaseReq.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("orderInfo" + "." + "base_req")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateIocOrderBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateIocOrderBody) UnmarshalBinary(b []byte) error {
	var res CreateIocOrderBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
