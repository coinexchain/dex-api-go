// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/coinexchain/dex-api-go/models"
)

// QueryCandleStickReader is a Reader for the QueryCandleStick structure.
type QueryCandleStickReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QueryCandleStickReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewQueryCandleStickOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewQueryCandleStickInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewQueryCandleStickOK creates a QueryCandleStickOK with default headers values
func NewQueryCandleStickOK() *QueryCandleStickOK {
	return &QueryCandleStickOK{}
}

/*QueryCandleStickOK handles this case with default header values.

OK
*/
type QueryCandleStickOK struct {
	Payload []*models.CandleStick
}

func (o *QueryCandleStickOK) Error() string {
	return fmt.Sprintf("[GET /market/candle-sticks][%d] queryCandleStickOK  %+v", 200, o.Payload)
}

func (o *QueryCandleStickOK) GetPayload() []*models.CandleStick {
	return o.Payload
}

func (o *QueryCandleStickOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryCandleStickInternalServerError creates a QueryCandleStickInternalServerError with default headers values
func NewQueryCandleStickInternalServerError() *QueryCandleStickInternalServerError {
	return &QueryCandleStickInternalServerError{}
}

/*QueryCandleStickInternalServerError handles this case with default header values.

Server internal error
*/
type QueryCandleStickInternalServerError struct {
}

func (o *QueryCandleStickInternalServerError) Error() string {
	return fmt.Sprintf("[GET /market/candle-sticks][%d] queryCandleStickInternalServerError ", 500)
}

func (o *QueryCandleStickInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
