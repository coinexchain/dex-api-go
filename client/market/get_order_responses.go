// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/coinexchain/dex-api-go/models"
)

// GetOrderReader is a Reader for the GetOrder structure.
type GetOrderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOrderOK creates a GetOrderOK with default headers values
func NewGetOrderOK() *GetOrderOK {
	return &GetOrderOK{}
}

/*GetOrderOK handles this case with default header values.

Order info of the specified id
*/
type GetOrderOK struct {
	Payload *GetOrderOKBody
}

func (o *GetOrderOK) Error() string {
	return fmt.Sprintf("[GET /market/orders/{order-id}][%d] getOrderOK  %+v", 200, o.Payload)
}

func (o *GetOrderOK) GetPayload() *GetOrderOKBody {
	return o.Payload
}

func (o *GetOrderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetOrderOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrderBadRequest creates a GetOrderBadRequest with default headers values
func NewGetOrderBadRequest() *GetOrderBadRequest {
	return &GetOrderBadRequest{}
}

/*GetOrderBadRequest handles this case with default header values.

Invalid order-id
*/
type GetOrderBadRequest struct {
}

func (o *GetOrderBadRequest) Error() string {
	return fmt.Sprintf("[GET /market/orders/{order-id}][%d] getOrderBadRequest ", 400)
}

func (o *GetOrderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrderInternalServerError creates a GetOrderInternalServerError with default headers values
func NewGetOrderInternalServerError() *GetOrderInternalServerError {
	return &GetOrderInternalServerError{}
}

/*GetOrderInternalServerError handles this case with default header values.

Server internal error
*/
type GetOrderInternalServerError struct {
}

func (o *GetOrderInternalServerError) Error() string {
	return fmt.Sprintf("[GET /market/orders/{order-id}][%d] getOrderInternalServerError ", 500)
}

func (o *GetOrderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetOrderOKBody get order o k body
swagger:model GetOrderOKBody
*/
type GetOrderOKBody struct {

	// height
	Height string `json:"height,omitempty"`

	// result
	Result *GetOrderOKBodyResult `json:"result,omitempty"`
}

// Validate validates this get order o k body
func (o *GetOrderOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrderOKBody) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(o.Result) { // not required
		return nil
	}

	if o.Result != nil {
		if err := o.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getOrderOK" + "." + "result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetOrderOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrderOKBody) UnmarshalBinary(b []byte) error {
	var res GetOrderOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetOrderOKBodyResult get order o k body result
swagger:model GetOrderOKBodyResult
*/
type GetOrderOKBodyResult struct {

	// type
	Type string `json:"type,omitempty"`

	// value
	Value *models.OrderInfo `json:"value,omitempty"`
}

// Validate validates this get order o k body result
func (o *GetOrderOKBodyResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrderOKBodyResult) validateValue(formats strfmt.Registry) error {

	if swag.IsZero(o.Value) { // not required
		return nil
	}

	if o.Value != nil {
		if err := o.Value.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getOrderOK" + "." + "result" + "." + "value")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetOrderOKBodyResult) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrderOKBodyResult) UnmarshalBinary(b []byte) error {
	var res GetOrderOKBodyResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
