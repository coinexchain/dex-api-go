// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetMarketParamsReader is a Reader for the GetMarketParams structure.
type GetMarketParamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMarketParamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMarketParamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetMarketParamsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMarketParamsOK creates a GetMarketParamsOK with default headers values
func NewGetMarketParamsOK() *GetMarketParamsOK {
	return &GetMarketParamsOK{}
}

/*GetMarketParamsOK handles this case with default header values.

OK
*/
type GetMarketParamsOK struct {
	Payload *GetMarketParamsOKBody
}

func (o *GetMarketParamsOK) Error() string {
	return fmt.Sprintf("[GET /market/parameters][%d] getMarketParamsOK  %+v", 200, o.Payload)
}

func (o *GetMarketParamsOK) GetPayload() *GetMarketParamsOKBody {
	return o.Payload
}

func (o *GetMarketParamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetMarketParamsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketParamsInternalServerError creates a GetMarketParamsInternalServerError with default headers values
func NewGetMarketParamsInternalServerError() *GetMarketParamsInternalServerError {
	return &GetMarketParamsInternalServerError{}
}

/*GetMarketParamsInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetMarketParamsInternalServerError struct {
}

func (o *GetMarketParamsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /market/parameters][%d] getMarketParamsInternalServerError ", 500)
}

func (o *GetMarketParamsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetMarketParamsOKBody get market params o k body
swagger:model GetMarketParamsOKBody
*/
type GetMarketParamsOKBody struct {

	// height
	Height string `json:"height,omitempty"`

	// result
	Result *GetMarketParamsOKBodyResult `json:"result,omitempty"`
}

// Validate validates this get market params o k body
func (o *GetMarketParamsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetMarketParamsOKBody) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(o.Result) { // not required
		return nil
	}

	if o.Result != nil {
		if err := o.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getMarketParamsOK" + "." + "result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetMarketParamsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMarketParamsOKBody) UnmarshalBinary(b []byte) error {
	var res GetMarketParamsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetMarketParamsOKBodyResult get market params o k body result
swagger:model GetMarketParamsOKBodyResult
*/
type GetMarketParamsOKBodyResult struct {

	// create market fee
	CreateMarketFee string `json:"create_market_fee,omitempty"`

	// fee for zero deal
	FeeForZeroDeal string `json:"fee_for_zero_deal,omitempty"`

	// fixed trade fee
	FixedTradeFee string `json:"fixed_trade_fee,omitempty"`

	// gte order feature fee by blocks
	GteOrderFeatureFeeByBlocks string `json:"gte_order_feature_fee_by_blocks,omitempty"`

	// gte order lifetime
	GteOrderLifetime string `json:"gte_order_lifetime,omitempty"`

	// market fee min
	MarketFeeMin string `json:"market_fee_min,omitempty"`

	// market fee rate
	MarketFeeRate string `json:"market_fee_rate,omitempty"`

	// market min expired time
	MarketMinExpiredTime string `json:"market_min_expired_time,omitempty"`

	// max executed price change ratio
	MaxExecutedPriceChangeRatio string `json:"max_executed_price_change_ratio,omitempty"`
}

// Validate validates this get market params o k body result
func (o *GetMarketParamsOKBodyResult) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetMarketParamsOKBodyResult) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMarketParamsOKBodyResult) UnmarshalBinary(b []byte) error {
	var res GetMarketParamsOKBodyResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
