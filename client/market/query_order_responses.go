// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/coinexchain/dex-api-go/models"
)

// QueryOrderReader is a Reader for the QueryOrder structure.
type QueryOrderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QueryOrderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewQueryOrderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewQueryOrderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewQueryOrderOK creates a QueryOrderOK with default headers values
func NewQueryOrderOK() *QueryOrderOK {
	return &QueryOrderOK{}
}

/*QueryOrderOK handles this case with default header values.

OK
*/
type QueryOrderOK struct {
	Payload *models.UserOrder
}

func (o *QueryOrderOK) Error() string {
	return fmt.Sprintf("[GET /market/user-orders][%d] queryOrderOK  %+v", 200, o.Payload)
}

func (o *QueryOrderOK) GetPayload() *models.UserOrder {
	return o.Payload
}

func (o *QueryOrderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserOrder)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryOrderInternalServerError creates a QueryOrderInternalServerError with default headers values
func NewQueryOrderInternalServerError() *QueryOrderInternalServerError {
	return &QueryOrderInternalServerError{}
}

/*QueryOrderInternalServerError handles this case with default header values.

Server internal error
*/
type QueryOrderInternalServerError struct {
}

func (o *QueryOrderInternalServerError) Error() string {
	return fmt.Sprintf("[GET /market/user-orders][%d] queryOrderInternalServerError ", 500)
}

func (o *QueryOrderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
