// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/coinexchain/dex-api-go/models"
)

// GetOrdersReader is a Reader for the GetOrders structure.
type GetOrdersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrdersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrdersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrdersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrdersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOrdersOK creates a GetOrdersOK with default headers values
func NewGetOrdersOK() *GetOrdersOK {
	return &GetOrdersOK{}
}

/*GetOrdersOK handles this case with default header values.

OK
*/
type GetOrdersOK struct {
	Payload *GetOrdersOKBody
}

func (o *GetOrdersOK) Error() string {
	return fmt.Sprintf("[GET /market/orders/account/{address}][%d] getOrdersOK  %+v", 200, o.Payload)
}

func (o *GetOrdersOK) GetPayload() *GetOrdersOKBody {
	return o.Payload
}

func (o *GetOrdersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetOrdersOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrdersBadRequest creates a GetOrdersBadRequest with default headers values
func NewGetOrdersBadRequest() *GetOrdersBadRequest {
	return &GetOrdersBadRequest{}
}

/*GetOrdersBadRequest handles this case with default header values.

Invalid address
*/
type GetOrdersBadRequest struct {
}

func (o *GetOrdersBadRequest) Error() string {
	return fmt.Sprintf("[GET /market/orders/account/{address}][%d] getOrdersBadRequest ", 400)
}

func (o *GetOrdersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrdersInternalServerError creates a GetOrdersInternalServerError with default headers values
func NewGetOrdersInternalServerError() *GetOrdersInternalServerError {
	return &GetOrdersInternalServerError{}
}

/*GetOrdersInternalServerError handles this case with default header values.

Server internal error
*/
type GetOrdersInternalServerError struct {
}

func (o *GetOrdersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /market/orders/account/{address}][%d] getOrdersInternalServerError ", 500)
}

func (o *GetOrdersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetOrdersOKBody get orders o k body
swagger:model GetOrdersOKBody
*/
type GetOrdersOKBody struct {

	// height
	Height string `json:"height,omitempty"`

	// result
	Result models.OrderIds `json:"result"`
}

// Validate validates this get orders o k body
func (o *GetOrdersOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrdersOKBody) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(o.Result) { // not required
		return nil
	}

	if err := o.Result.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("getOrdersOK" + "." + "result")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetOrdersOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrdersOKBody) UnmarshalBinary(b []byte) error {
	var res GetOrdersOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
