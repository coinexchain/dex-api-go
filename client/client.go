// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/coinexchain/dex-api-go/client/alias"
	"github.com/coinexchain/dex-api-go/client/asset"
	"github.com/coinexchain/dex-api-go/client/auth"
	"github.com/coinexchain/dex-api-go/client/bancorlite"
	"github.com/coinexchain/dex-api-go/client/bank"
	"github.com/coinexchain/dex-api-go/client/comment"
	"github.com/coinexchain/dex-api-go/client/distribution"
	"github.com/coinexchain/dex-api-go/client/governance"
	"github.com/coinexchain/dex-api-go/client/incentive"
	"github.com/coinexchain/dex-api-go/client/market"
	"github.com/coinexchain/dex-api-go/client/slashing"
	"github.com/coinexchain/dex-api-go/client/staking"
	"github.com/coinexchain/dex-api-go/client/tendermint"
	"github.com/coinexchain/dex-api-go/client/transactions"
)

// Default c e t lite for coin ex chain HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "dex-api.coinex.org"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http", "https"}

// NewHTTPClient creates a new c e t lite for coin ex chain HTTP client.
func NewHTTPClient(formats strfmt.Registry) *CETLiteForCoinExChain {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new c e t lite for coin ex chain HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *CETLiteForCoinExChain {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new c e t lite for coin ex chain client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *CETLiteForCoinExChain {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(CETLiteForCoinExChain)
	cli.Transport = transport
	cli.Alias = alias.New(transport, formats)
	cli.Asset = asset.New(transport, formats)
	cli.Auth = auth.New(transport, formats)
	cli.Bancorlite = bancorlite.New(transport, formats)
	cli.Bank = bank.New(transport, formats)
	cli.Comment = comment.New(transport, formats)
	cli.Distribution = distribution.New(transport, formats)
	cli.Governance = governance.New(transport, formats)
	cli.Incentive = incentive.New(transport, formats)
	cli.Market = market.New(transport, formats)
	cli.Slashing = slashing.New(transport, formats)
	cli.Staking = staking.New(transport, formats)
	cli.Tendermint = tendermint.New(transport, formats)
	cli.Transactions = transactions.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// CETLiteForCoinExChain is a client for c e t lite for coin ex chain
type CETLiteForCoinExChain struct {
	Alias alias.ClientService

	Asset asset.ClientService

	Auth auth.ClientService

	Bancorlite bancorlite.ClientService

	Bank bank.ClientService

	Comment comment.ClientService

	Distribution distribution.ClientService

	Governance governance.ClientService

	Incentive incentive.ClientService

	Market market.ClientService

	Slashing slashing.ClientService

	Staking staking.ClientService

	Tendermint tendermint.ClientService

	Transactions transactions.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *CETLiteForCoinExChain) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Alias.SetTransport(transport)
	c.Asset.SetTransport(transport)
	c.Auth.SetTransport(transport)
	c.Bancorlite.SetTransport(transport)
	c.Bank.SetTransport(transport)
	c.Comment.SetTransport(transport)
	c.Distribution.SetTransport(transport)
	c.Governance.SetTransport(transport)
	c.Incentive.SetTransport(transport)
	c.Market.SetTransport(transport)
	c.Slashing.SetTransport(transport)
	c.Staking.SetTransport(transport)
	c.Tendermint.SetTransport(transport)
	c.Transactions.SetTransport(transport)
}
