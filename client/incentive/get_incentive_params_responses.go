// Code generated by go-swagger; DO NOT EDIT.

package incentive

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetIncentiveParamsReader is a Reader for the GetIncentiveParams structure.
type GetIncentiveParamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIncentiveParamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIncentiveParamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetIncentiveParamsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetIncentiveParamsOK creates a GetIncentiveParamsOK with default headers values
func NewGetIncentiveParamsOK() *GetIncentiveParamsOK {
	return &GetIncentiveParamsOK{}
}

/*GetIncentiveParamsOK handles this case with default header values.

OK
*/
type GetIncentiveParamsOK struct {
	Payload *GetIncentiveParamsOKBody
}

func (o *GetIncentiveParamsOK) Error() string {
	return fmt.Sprintf("[GET /incentive/parameters][%d] getIncentiveParamsOK  %+v", 200, o.Payload)
}

func (o *GetIncentiveParamsOK) GetPayload() *GetIncentiveParamsOKBody {
	return o.Payload
}

func (o *GetIncentiveParamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetIncentiveParamsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIncentiveParamsInternalServerError creates a GetIncentiveParamsInternalServerError with default headers values
func NewGetIncentiveParamsInternalServerError() *GetIncentiveParamsInternalServerError {
	return &GetIncentiveParamsInternalServerError{}
}

/*GetIncentiveParamsInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetIncentiveParamsInternalServerError struct {
}

func (o *GetIncentiveParamsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /incentive/parameters][%d] getIncentiveParamsInternalServerError ", 500)
}

func (o *GetIncentiveParamsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetIncentiveParamsOKBody get incentive params o k body
swagger:model GetIncentiveParamsOKBody
*/
type GetIncentiveParamsOKBody struct {

	// height
	Height string `json:"height,omitempty"`

	// result
	Result *GetIncentiveParamsOKBodyResult `json:"result,omitempty"`
}

// Validate validates this get incentive params o k body
func (o *GetIncentiveParamsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIncentiveParamsOKBody) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(o.Result) { // not required
		return nil
	}

	if o.Result != nil {
		if err := o.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getIncentiveParamsOK" + "." + "result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetIncentiveParamsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIncentiveParamsOKBody) UnmarshalBinary(b []byte) error {
	var res GetIncentiveParamsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetIncentiveParamsOKBodyResult get incentive params o k body result
swagger:model GetIncentiveParamsOKBodyResult
*/
type GetIncentiveParamsOKBodyResult struct {

	// default reward per block
	DefaultRewardPerBlock string `json:"default_reward_per_block,omitempty"`

	// plans
	Plans []*GetIncentiveParamsOKBodyResultPlansItems0 `json:"plans"`
}

// Validate validates this get incentive params o k body result
func (o *GetIncentiveParamsOKBodyResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePlans(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIncentiveParamsOKBodyResult) validatePlans(formats strfmt.Registry) error {

	if swag.IsZero(o.Plans) { // not required
		return nil
	}

	for i := 0; i < len(o.Plans); i++ {
		if swag.IsZero(o.Plans[i]) { // not required
			continue
		}

		if o.Plans[i] != nil {
			if err := o.Plans[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getIncentiveParamsOK" + "." + "result" + "." + "plans" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetIncentiveParamsOKBodyResult) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIncentiveParamsOKBodyResult) UnmarshalBinary(b []byte) error {
	var res GetIncentiveParamsOKBodyResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetIncentiveParamsOKBodyResultPlansItems0 get incentive params o k body result plans items0
swagger:model GetIncentiveParamsOKBodyResultPlansItems0
*/
type GetIncentiveParamsOKBodyResultPlansItems0 struct {

	// end height
	EndHeight string `json:"end_height,omitempty"`

	// reward per block
	RewardPerBlock string `json:"reward_per_block,omitempty"`

	// start height
	StartHeight string `json:"start_height,omitempty"`

	// total incentive
	TotalIncentive string `json:"total_incentive,omitempty"`
}

// Validate validates this get incentive params o k body result plans items0
func (o *GetIncentiveParamsOKBodyResultPlansItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIncentiveParamsOKBodyResultPlansItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIncentiveParamsOKBodyResultPlansItems0) UnmarshalBinary(b []byte) error {
	var res GetIncentiveParamsOKBodyResultPlansItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
