// Code generated by go-swagger; DO NOT EDIT.

package slashing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/coinexchain/dex-api-go/models"
)

// GetSigningInfoReader is a Reader for the GetSigningInfo structure.
type GetSigningInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSigningInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSigningInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetSigningInfoNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSigningInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSigningInfoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSigningInfoOK creates a GetSigningInfoOK with default headers values
func NewGetSigningInfoOK() *GetSigningInfoOK {
	return &GetSigningInfoOK{}
}

/*GetSigningInfoOK handles this case with default header values.

OK
*/
type GetSigningInfoOK struct {
	Payload *GetSigningInfoOKBody
}

func (o *GetSigningInfoOK) Error() string {
	return fmt.Sprintf("[GET /slashing/validators/{validatorPubKey}/signing_info][%d] getSigningInfoOK  %+v", 200, o.Payload)
}

func (o *GetSigningInfoOK) GetPayload() *GetSigningInfoOKBody {
	return o.Payload
}

func (o *GetSigningInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetSigningInfoOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSigningInfoNoContent creates a GetSigningInfoNoContent with default headers values
func NewGetSigningInfoNoContent() *GetSigningInfoNoContent {
	return &GetSigningInfoNoContent{}
}

/*GetSigningInfoNoContent handles this case with default header values.

No sign info of this validator
*/
type GetSigningInfoNoContent struct {
}

func (o *GetSigningInfoNoContent) Error() string {
	return fmt.Sprintf("[GET /slashing/validators/{validatorPubKey}/signing_info][%d] getSigningInfoNoContent ", 204)
}

func (o *GetSigningInfoNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSigningInfoBadRequest creates a GetSigningInfoBadRequest with default headers values
func NewGetSigningInfoBadRequest() *GetSigningInfoBadRequest {
	return &GetSigningInfoBadRequest{}
}

/*GetSigningInfoBadRequest handles this case with default header values.

Invalid validator public key
*/
type GetSigningInfoBadRequest struct {
}

func (o *GetSigningInfoBadRequest) Error() string {
	return fmt.Sprintf("[GET /slashing/validators/{validatorPubKey}/signing_info][%d] getSigningInfoBadRequest ", 400)
}

func (o *GetSigningInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSigningInfoInternalServerError creates a GetSigningInfoInternalServerError with default headers values
func NewGetSigningInfoInternalServerError() *GetSigningInfoInternalServerError {
	return &GetSigningInfoInternalServerError{}
}

/*GetSigningInfoInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetSigningInfoInternalServerError struct {
}

func (o *GetSigningInfoInternalServerError) Error() string {
	return fmt.Sprintf("[GET /slashing/validators/{validatorPubKey}/signing_info][%d] getSigningInfoInternalServerError ", 500)
}

func (o *GetSigningInfoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetSigningInfoOKBody get signing info o k body
swagger:model GetSigningInfoOKBody
*/
type GetSigningInfoOKBody struct {

	// height
	Height string `json:"height,omitempty"`

	// result
	Result *models.SigningInfo `json:"result,omitempty"`
}

// Validate validates this get signing info o k body
func (o *GetSigningInfoOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetSigningInfoOKBody) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(o.Result) { // not required
		return nil
	}

	if o.Result != nil {
		if err := o.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getSigningInfoOK" + "." + "result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetSigningInfoOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSigningInfoOKBody) UnmarshalBinary(b []byte) error {
	var res GetSigningInfoOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
