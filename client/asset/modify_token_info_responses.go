// Code generated by go-swagger; DO NOT EDIT.

package asset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/coinexchain/dex-api-go/models"
)

// ModifyTokenInfoReader is a Reader for the ModifyTokenInfo structure.
type ModifyTokenInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ModifyTokenInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewModifyTokenInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewModifyTokenInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewModifyTokenInfoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewModifyTokenInfoOK creates a ModifyTokenInfoOK with default headers values
func NewModifyTokenInfoOK() *ModifyTokenInfoOK {
	return &ModifyTokenInfoOK{}
}

/*ModifyTokenInfoOK handles this case with default header values.

Modify token info result
*/
type ModifyTokenInfoOK struct {
	Payload *models.StdTx
}

func (o *ModifyTokenInfoOK) Error() string {
	return fmt.Sprintf("[POST /asset/tokens/{symbol}/infos][%d] modifyTokenInfoOK  %+v", 200, o.Payload)
}

func (o *ModifyTokenInfoOK) GetPayload() *models.StdTx {
	return o.Payload
}

func (o *ModifyTokenInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StdTx)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyTokenInfoBadRequest creates a ModifyTokenInfoBadRequest with default headers values
func NewModifyTokenInfoBadRequest() *ModifyTokenInfoBadRequest {
	return &ModifyTokenInfoBadRequest{}
}

/*ModifyTokenInfoBadRequest handles this case with default header values.

Invalid Request
*/
type ModifyTokenInfoBadRequest struct {
}

func (o *ModifyTokenInfoBadRequest) Error() string {
	return fmt.Sprintf("[POST /asset/tokens/{symbol}/infos][%d] modifyTokenInfoBadRequest ", 400)
}

func (o *ModifyTokenInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewModifyTokenInfoInternalServerError creates a ModifyTokenInfoInternalServerError with default headers values
func NewModifyTokenInfoInternalServerError() *ModifyTokenInfoInternalServerError {
	return &ModifyTokenInfoInternalServerError{}
}

/*ModifyTokenInfoInternalServerError handles this case with default header values.

Internal Server Error
*/
type ModifyTokenInfoInternalServerError struct {
}

func (o *ModifyTokenInfoInternalServerError) Error() string {
	return fmt.Sprintf("[POST /asset/tokens/{symbol}/infos][%d] modifyTokenInfoInternalServerError ", 500)
}

func (o *ModifyTokenInfoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*ModifyTokenInfoBody modify token info body
swagger:model ModifyTokenInfoBody
*/
type ModifyTokenInfoBody struct {

	// addr forbiddable
	AddrForbiddable string `json:"addr_forbiddable,omitempty"`

	// base req
	BaseReq *models.BaseReq `json:"base_req,omitempty"`

	// burnable
	Burnable string `json:"burnable,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// identity
	Identity string `json:"identity,omitempty"`

	// mintable
	Mintable string `json:"mintable,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// token forbiddable
	TokenForbiddable string `json:"token_forbiddable,omitempty"`

	// total supply
	TotalSupply string `json:"total_supply,omitempty"`

	// url
	URL string `json:"url,omitempty"`
}

// Validate validates this modify token info body
func (o *ModifyTokenInfoBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBaseReq(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ModifyTokenInfoBody) validateBaseReq(formats strfmt.Registry) error {

	if swag.IsZero(o.BaseReq) { // not required
		return nil
	}

	if o.BaseReq != nil {
		if err := o.BaseReq.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("info" + "." + "base_req")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ModifyTokenInfoBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ModifyTokenInfoBody) UnmarshalBinary(b []byte) error {
	var res ModifyTokenInfoBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
