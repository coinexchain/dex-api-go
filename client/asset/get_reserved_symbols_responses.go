// Code generated by go-swagger; DO NOT EDIT.

package asset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetReservedSymbolsReader is a Reader for the GetReservedSymbols structure.
type GetReservedSymbolsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReservedSymbolsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReservedSymbolsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetReservedSymbolsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetReservedSymbolsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetReservedSymbolsOK creates a GetReservedSymbolsOK with default headers values
func NewGetReservedSymbolsOK() *GetReservedSymbolsOK {
	return &GetReservedSymbolsOK{}
}

/*GetReservedSymbolsOK handles this case with default header values.

All reserved symbols
*/
type GetReservedSymbolsOK struct {
	Payload *GetReservedSymbolsOKBody
}

func (o *GetReservedSymbolsOK) Error() string {
	return fmt.Sprintf("[GET /asset/tokens/reserved/symbols][%d] getReservedSymbolsOK  %+v", 200, o.Payload)
}

func (o *GetReservedSymbolsOK) GetPayload() *GetReservedSymbolsOKBody {
	return o.Payload
}

func (o *GetReservedSymbolsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReservedSymbolsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReservedSymbolsBadRequest creates a GetReservedSymbolsBadRequest with default headers values
func NewGetReservedSymbolsBadRequest() *GetReservedSymbolsBadRequest {
	return &GetReservedSymbolsBadRequest{}
}

/*GetReservedSymbolsBadRequest handles this case with default header values.

Invalid Request
*/
type GetReservedSymbolsBadRequest struct {
}

func (o *GetReservedSymbolsBadRequest) Error() string {
	return fmt.Sprintf("[GET /asset/tokens/reserved/symbols][%d] getReservedSymbolsBadRequest ", 400)
}

func (o *GetReservedSymbolsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReservedSymbolsInternalServerError creates a GetReservedSymbolsInternalServerError with default headers values
func NewGetReservedSymbolsInternalServerError() *GetReservedSymbolsInternalServerError {
	return &GetReservedSymbolsInternalServerError{}
}

/*GetReservedSymbolsInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetReservedSymbolsInternalServerError struct {
}

func (o *GetReservedSymbolsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /asset/tokens/reserved/symbols][%d] getReservedSymbolsInternalServerError ", 500)
}

func (o *GetReservedSymbolsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetReservedSymbolsOKBody get reserved symbols o k body
swagger:model GetReservedSymbolsOKBody
*/
type GetReservedSymbolsOKBody struct {

	// height
	Height string `json:"height,omitempty"`

	// result
	Result string `json:"result,omitempty"`
}

// Validate validates this get reserved symbols o k body
func (o *GetReservedSymbolsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReservedSymbolsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReservedSymbolsOKBody) UnmarshalBinary(b []byte) error {
	var res GetReservedSymbolsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
