// Code generated by go-swagger; DO NOT EDIT.

package asset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/coinexchain/dex-api-go/models"
)

// GetTokenReader is a Reader for the GetToken structure.
type GetTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTokenNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTokenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTokenOK creates a GetTokenOK with default headers values
func NewGetTokenOK() *GetTokenOK {
	return &GetTokenOK{}
}

/*GetTokenOK handles this case with default header values.

token with provided symbol
*/
type GetTokenOK struct {
	Payload *GetTokenOKBody
}

func (o *GetTokenOK) Error() string {
	return fmt.Sprintf("[GET /asset/tokens/{symbol}][%d] getTokenOK  %+v", 200, o.Payload)
}

func (o *GetTokenOK) GetPayload() *GetTokenOKBody {
	return o.Payload
}

func (o *GetTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTokenOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokenBadRequest creates a GetTokenBadRequest with default headers values
func NewGetTokenBadRequest() *GetTokenBadRequest {
	return &GetTokenBadRequest{}
}

/*GetTokenBadRequest handles this case with default header values.

Invalid Request
*/
type GetTokenBadRequest struct {
}

func (o *GetTokenBadRequest) Error() string {
	return fmt.Sprintf("[GET /asset/tokens/{symbol}][%d] getTokenBadRequest ", 400)
}

func (o *GetTokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTokenNotFound creates a GetTokenNotFound with default headers values
func NewGetTokenNotFound() *GetTokenNotFound {
	return &GetTokenNotFound{}
}

/*GetTokenNotFound handles this case with default header values.

Tokens not found
*/
type GetTokenNotFound struct {
}

func (o *GetTokenNotFound) Error() string {
	return fmt.Sprintf("[GET /asset/tokens/{symbol}][%d] getTokenNotFound ", 404)
}

func (o *GetTokenNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTokenInternalServerError creates a GetTokenInternalServerError with default headers values
func NewGetTokenInternalServerError() *GetTokenInternalServerError {
	return &GetTokenInternalServerError{}
}

/*GetTokenInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetTokenInternalServerError struct {
}

func (o *GetTokenInternalServerError) Error() string {
	return fmt.Sprintf("[GET /asset/tokens/{symbol}][%d] getTokenInternalServerError ", 500)
}

func (o *GetTokenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetTokenOKBody get token o k body
swagger:model GetTokenOKBody
*/
type GetTokenOKBody struct {

	// height
	Height string `json:"height,omitempty"`

	// result
	Result *models.Token `json:"result,omitempty"`
}

// Validate validates this get token o k body
func (o *GetTokenOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTokenOKBody) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(o.Result) { // not required
		return nil
	}

	if o.Result != nil {
		if err := o.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getTokenOK" + "." + "result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTokenOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTokenOKBody) UnmarshalBinary(b []byte) error {
	var res GetTokenOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
