// Code generated by go-swagger; DO NOT EDIT.

package asset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/coinexchain/dex-api-go/models"
)

// UnFrobidTokenReader is a Reader for the UnFrobidToken structure.
type UnFrobidTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnFrobidTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUnFrobidTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUnFrobidTokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUnFrobidTokenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUnFrobidTokenOK creates a UnFrobidTokenOK with default headers values
func NewUnFrobidTokenOK() *UnFrobidTokenOK {
	return &UnFrobidTokenOK{}
}

/*UnFrobidTokenOK handles this case with default header values.

UnForbid token result
*/
type UnFrobidTokenOK struct {
	Payload *models.StdTx
}

func (o *UnFrobidTokenOK) Error() string {
	return fmt.Sprintf("[POST /asset/tokens/{symbol}/unforbids][%d] unFrobidTokenOK  %+v", 200, o.Payload)
}

func (o *UnFrobidTokenOK) GetPayload() *models.StdTx {
	return o.Payload
}

func (o *UnFrobidTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StdTx)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnFrobidTokenBadRequest creates a UnFrobidTokenBadRequest with default headers values
func NewUnFrobidTokenBadRequest() *UnFrobidTokenBadRequest {
	return &UnFrobidTokenBadRequest{}
}

/*UnFrobidTokenBadRequest handles this case with default header values.

Invalid Request
*/
type UnFrobidTokenBadRequest struct {
}

func (o *UnFrobidTokenBadRequest) Error() string {
	return fmt.Sprintf("[POST /asset/tokens/{symbol}/unforbids][%d] unFrobidTokenBadRequest ", 400)
}

func (o *UnFrobidTokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnFrobidTokenInternalServerError creates a UnFrobidTokenInternalServerError with default headers values
func NewUnFrobidTokenInternalServerError() *UnFrobidTokenInternalServerError {
	return &UnFrobidTokenInternalServerError{}
}

/*UnFrobidTokenInternalServerError handles this case with default header values.

Internal Server Error
*/
type UnFrobidTokenInternalServerError struct {
}

func (o *UnFrobidTokenInternalServerError) Error() string {
	return fmt.Sprintf("[POST /asset/tokens/{symbol}/unforbids][%d] unFrobidTokenInternalServerError ", 500)
}

func (o *UnFrobidTokenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*UnFrobidTokenBody un frobid token body
swagger:model UnFrobidTokenBody
*/
type UnFrobidTokenBody struct {

	// base req
	BaseReq *models.BaseReq `json:"base_req,omitempty"`
}

// Validate validates this un frobid token body
func (o *UnFrobidTokenBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBaseReq(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UnFrobidTokenBody) validateBaseReq(formats strfmt.Registry) error {

	if swag.IsZero(o.BaseReq) { // not required
		return nil
	}

	if o.BaseReq != nil {
		if err := o.BaseReq.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("baseReq" + "." + "base_req")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UnFrobidTokenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UnFrobidTokenBody) UnmarshalBinary(b []byte) error {
	var res UnFrobidTokenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
