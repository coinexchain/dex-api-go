// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/coinexchain/dex-api-go/models"
)

// EncodeTxReader is a Reader for the EncodeTx structure.
type EncodeTxReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EncodeTxReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEncodeTxOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEncodeTxBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEncodeTxInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewEncodeTxOK creates a EncodeTxOK with default headers values
func NewEncodeTxOK() *EncodeTxOK {
	return &EncodeTxOK{}
}

/*EncodeTxOK handles this case with default header values.

The tx was successfully decoded and re-encoded
*/
type EncodeTxOK struct {
	Payload *EncodeTxOKBody
}

func (o *EncodeTxOK) Error() string {
	return fmt.Sprintf("[POST /txs/encode][%d] encodeTxOK  %+v", 200, o.Payload)
}

func (o *EncodeTxOK) GetPayload() *EncodeTxOKBody {
	return o.Payload
}

func (o *EncodeTxOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(EncodeTxOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEncodeTxBadRequest creates a EncodeTxBadRequest with default headers values
func NewEncodeTxBadRequest() *EncodeTxBadRequest {
	return &EncodeTxBadRequest{}
}

/*EncodeTxBadRequest handles this case with default header values.

The tx was malformated
*/
type EncodeTxBadRequest struct {
}

func (o *EncodeTxBadRequest) Error() string {
	return fmt.Sprintf("[POST /txs/encode][%d] encodeTxBadRequest ", 400)
}

func (o *EncodeTxBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEncodeTxInternalServerError creates a EncodeTxInternalServerError with default headers values
func NewEncodeTxInternalServerError() *EncodeTxInternalServerError {
	return &EncodeTxInternalServerError{}
}

/*EncodeTxInternalServerError handles this case with default header values.

Server internal error
*/
type EncodeTxInternalServerError struct {
}

func (o *EncodeTxInternalServerError) Error() string {
	return fmt.Sprintf("[POST /txs/encode][%d] encodeTxInternalServerError ", 500)
}

func (o *EncodeTxInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*EncodeTxBody encode tx body
swagger:model EncodeTxBody
*/
type EncodeTxBody struct {

	// tx
	Tx *models.StdTx `json:"tx,omitempty"`
}

// Validate validates this encode tx body
func (o *EncodeTxBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTx(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *EncodeTxBody) validateTx(formats strfmt.Registry) error {

	if swag.IsZero(o.Tx) { // not required
		return nil
	}

	if o.Tx != nil {
		if err := o.Tx.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tx" + "." + "tx")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *EncodeTxBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *EncodeTxBody) UnmarshalBinary(b []byte) error {
	var res EncodeTxBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*EncodeTxOKBody encode tx o k body
swagger:model EncodeTxOKBody
*/
type EncodeTxOKBody struct {

	// tx
	Tx string `json:"tx,omitempty"`
}

// Validate validates this encode tx o k body
func (o *EncodeTxOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *EncodeTxOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *EncodeTxOKBody) UnmarshalBinary(b []byte) error {
	var res EncodeTxOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
