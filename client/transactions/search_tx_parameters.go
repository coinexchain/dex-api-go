// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSearchTxParams creates a new SearchTxParams object
// with the default values initialized.
func NewSearchTxParams() *SearchTxParams {
	var ()
	return &SearchTxParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSearchTxParamsWithTimeout creates a new SearchTxParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSearchTxParamsWithTimeout(timeout time.Duration) *SearchTxParams {
	var ()
	return &SearchTxParams{

		timeout: timeout,
	}
}

// NewSearchTxParamsWithContext creates a new SearchTxParams object
// with the default values initialized, and the ability to set a context for a request
func NewSearchTxParamsWithContext(ctx context.Context) *SearchTxParams {
	var ()
	return &SearchTxParams{

		Context: ctx,
	}
}

// NewSearchTxParamsWithHTTPClient creates a new SearchTxParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSearchTxParamsWithHTTPClient(client *http.Client) *SearchTxParams {
	var ()
	return &SearchTxParams{
		HTTPClient: client,
	}
}

/*SearchTxParams contains all the parameters to send to the API endpoint
for the search tx operation typically these are written to a http.Request
*/
type SearchTxParams struct {

	/*Limit
	  Maximum number of items per page

	*/
	Limit *int64
	/*MessageAction
	  transaction events such as 'message.action=send' which results in the following endpoint: 'GET /txs?message.action=send'

	*/
	MessageAction *string
	/*MessageSender
	  transaction tags with sender: 'GET /txs?message.action=send&message.sender=cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv'

	*/
	MessageSender *string
	/*Page
	  Page number

	*/
	Page *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the search tx params
func (o *SearchTxParams) WithTimeout(timeout time.Duration) *SearchTxParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the search tx params
func (o *SearchTxParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the search tx params
func (o *SearchTxParams) WithContext(ctx context.Context) *SearchTxParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the search tx params
func (o *SearchTxParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the search tx params
func (o *SearchTxParams) WithHTTPClient(client *http.Client) *SearchTxParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the search tx params
func (o *SearchTxParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLimit adds the limit to the search tx params
func (o *SearchTxParams) WithLimit(limit *int64) *SearchTxParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the search tx params
func (o *SearchTxParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithMessageAction adds the messageAction to the search tx params
func (o *SearchTxParams) WithMessageAction(messageAction *string) *SearchTxParams {
	o.SetMessageAction(messageAction)
	return o
}

// SetMessageAction adds the messageAction to the search tx params
func (o *SearchTxParams) SetMessageAction(messageAction *string) {
	o.MessageAction = messageAction
}

// WithMessageSender adds the messageSender to the search tx params
func (o *SearchTxParams) WithMessageSender(messageSender *string) *SearchTxParams {
	o.SetMessageSender(messageSender)
	return o
}

// SetMessageSender adds the messageSender to the search tx params
func (o *SearchTxParams) SetMessageSender(messageSender *string) {
	o.MessageSender = messageSender
}

// WithPage adds the page to the search tx params
func (o *SearchTxParams) WithPage(page *int64) *SearchTxParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the search tx params
func (o *SearchTxParams) SetPage(page *int64) {
	o.Page = page
}

// WriteToRequest writes these params to a swagger request
func (o *SearchTxParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Limit != nil {

		// query param limit
		var qrLimit int64
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.MessageAction != nil {

		// query param message.action
		var qrMessageAction string
		if o.MessageAction != nil {
			qrMessageAction = *o.MessageAction
		}
		qMessageAction := qrMessageAction
		if qMessageAction != "" {
			if err := r.SetQueryParam("message.action", qMessageAction); err != nil {
				return err
			}
		}

	}

	if o.MessageSender != nil {

		// query param message.sender
		var qrMessageSender string
		if o.MessageSender != nil {
			qrMessageSender = *o.MessageSender
		}
		qMessageSender := qrMessageSender
		if qMessageSender != "" {
			if err := r.SetQueryParam("message.sender", qMessageSender); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage int64
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt64(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
