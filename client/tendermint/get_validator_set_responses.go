// Code generated by go-swagger; DO NOT EDIT.

package tendermint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/coinexchain/dex-api-go/models"
)

// GetValidatorSetReader is a Reader for the GetValidatorSet structure.
type GetValidatorSetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetValidatorSetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetValidatorSetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetValidatorSetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetValidatorSetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetValidatorSetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetValidatorSetOK creates a GetValidatorSetOK with default headers values
func NewGetValidatorSetOK() *GetValidatorSetOK {
	return &GetValidatorSetOK{}
}

/*GetValidatorSetOK handles this case with default header values.

The validator set at a specific block height
*/
type GetValidatorSetOK struct {
	Payload *GetValidatorSetOKBody
}

func (o *GetValidatorSetOK) Error() string {
	return fmt.Sprintf("[GET /validatorsets/{height}][%d] getValidatorSetOK  %+v", 200, o.Payload)
}

func (o *GetValidatorSetOK) GetPayload() *GetValidatorSetOKBody {
	return o.Payload
}

func (o *GetValidatorSetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetValidatorSetOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetValidatorSetBadRequest creates a GetValidatorSetBadRequest with default headers values
func NewGetValidatorSetBadRequest() *GetValidatorSetBadRequest {
	return &GetValidatorSetBadRequest{}
}

/*GetValidatorSetBadRequest handles this case with default header values.

Invalid height
*/
type GetValidatorSetBadRequest struct {
}

func (o *GetValidatorSetBadRequest) Error() string {
	return fmt.Sprintf("[GET /validatorsets/{height}][%d] getValidatorSetBadRequest ", 400)
}

func (o *GetValidatorSetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetValidatorSetNotFound creates a GetValidatorSetNotFound with default headers values
func NewGetValidatorSetNotFound() *GetValidatorSetNotFound {
	return &GetValidatorSetNotFound{}
}

/*GetValidatorSetNotFound handles this case with default header values.

Block at height not available
*/
type GetValidatorSetNotFound struct {
}

func (o *GetValidatorSetNotFound) Error() string {
	return fmt.Sprintf("[GET /validatorsets/{height}][%d] getValidatorSetNotFound ", 404)
}

func (o *GetValidatorSetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetValidatorSetInternalServerError creates a GetValidatorSetInternalServerError with default headers values
func NewGetValidatorSetInternalServerError() *GetValidatorSetInternalServerError {
	return &GetValidatorSetInternalServerError{}
}

/*GetValidatorSetInternalServerError handles this case with default header values.

Server internal error
*/
type GetValidatorSetInternalServerError struct {
}

func (o *GetValidatorSetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /validatorsets/{height}][%d] getValidatorSetInternalServerError ", 500)
}

func (o *GetValidatorSetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetValidatorSetOKBody get validator set o k body
swagger:model GetValidatorSetOKBody
*/
type GetValidatorSetOKBody struct {

	// height
	Height string `json:"height,omitempty"`

	// result
	Result *GetValidatorSetOKBodyResult `json:"result,omitempty"`
}

// Validate validates this get validator set o k body
func (o *GetValidatorSetOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetValidatorSetOKBody) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(o.Result) { // not required
		return nil
	}

	if o.Result != nil {
		if err := o.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getValidatorSetOK" + "." + "result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetValidatorSetOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetValidatorSetOKBody) UnmarshalBinary(b []byte) error {
	var res GetValidatorSetOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetValidatorSetOKBodyResult get validator set o k body result
swagger:model GetValidatorSetOKBodyResult
*/
type GetValidatorSetOKBodyResult struct {

	// block height
	// Required: true
	BlockHeight *string `json:"block_height"`

	// validators
	// Required: true
	Validators []*models.TendermintValidator `json:"validators"`
}

// Validate validates this get validator set o k body result
func (o *GetValidatorSetOKBodyResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBlockHeight(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValidators(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetValidatorSetOKBodyResult) validateBlockHeight(formats strfmt.Registry) error {

	if err := validate.Required("getValidatorSetOK"+"."+"result"+"."+"block_height", "body", o.BlockHeight); err != nil {
		return err
	}

	return nil
}

func (o *GetValidatorSetOKBodyResult) validateValidators(formats strfmt.Registry) error {

	if err := validate.Required("getValidatorSetOK"+"."+"result"+"."+"validators", "body", o.Validators); err != nil {
		return err
	}

	for i := 0; i < len(o.Validators); i++ {
		if swag.IsZero(o.Validators[i]) { // not required
			continue
		}

		if o.Validators[i] != nil {
			if err := o.Validators[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getValidatorSetOK" + "." + "result" + "." + "validators" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetValidatorSetOKBodyResult) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetValidatorSetOKBodyResult) UnmarshalBinary(b []byte) error {
	var res GetValidatorSetOKBodyResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
