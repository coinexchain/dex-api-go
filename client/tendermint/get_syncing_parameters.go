// Code generated by go-swagger; DO NOT EDIT.

package tendermint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetSyncingParams creates a new GetSyncingParams object
// with the default values initialized.
func NewGetSyncingParams() *GetSyncingParams {

	return &GetSyncingParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSyncingParamsWithTimeout creates a new GetSyncingParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSyncingParamsWithTimeout(timeout time.Duration) *GetSyncingParams {

	return &GetSyncingParams{

		timeout: timeout,
	}
}

// NewGetSyncingParamsWithContext creates a new GetSyncingParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSyncingParamsWithContext(ctx context.Context) *GetSyncingParams {

	return &GetSyncingParams{

		Context: ctx,
	}
}

// NewGetSyncingParamsWithHTTPClient creates a new GetSyncingParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSyncingParamsWithHTTPClient(client *http.Client) *GetSyncingParams {

	return &GetSyncingParams{
		HTTPClient: client,
	}
}

/*GetSyncingParams contains all the parameters to send to the API endpoint
for the get syncing operation typically these are written to a http.Request
*/
type GetSyncingParams struct {
	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get syncing params
func (o *GetSyncingParams) WithTimeout(timeout time.Duration) *GetSyncingParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get syncing params
func (o *GetSyncingParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get syncing params
func (o *GetSyncingParams) WithContext(ctx context.Context) *GetSyncingParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get syncing params
func (o *GetSyncingParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get syncing params
func (o *GetSyncingParams) WithHTTPClient(client *http.Client) *GetSyncingParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get syncing params
func (o *GetSyncingParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WriteToRequest writes these params to a swagger request
func (o *GetSyncingParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
