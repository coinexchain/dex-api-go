// Code generated by go-swagger; DO NOT EDIT.

package distribution

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDonateToCommunityPoolParams creates a new DonateToCommunityPoolParams object
// with the default values initialized.
func NewDonateToCommunityPoolParams() *DonateToCommunityPoolParams {
	var ()
	return &DonateToCommunityPoolParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDonateToCommunityPoolParamsWithTimeout creates a new DonateToCommunityPoolParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDonateToCommunityPoolParamsWithTimeout(timeout time.Duration) *DonateToCommunityPoolParams {
	var ()
	return &DonateToCommunityPoolParams{

		timeout: timeout,
	}
}

// NewDonateToCommunityPoolParamsWithContext creates a new DonateToCommunityPoolParams object
// with the default values initialized, and the ability to set a context for a request
func NewDonateToCommunityPoolParamsWithContext(ctx context.Context) *DonateToCommunityPoolParams {
	var ()
	return &DonateToCommunityPoolParams{

		Context: ctx,
	}
}

// NewDonateToCommunityPoolParamsWithHTTPClient creates a new DonateToCommunityPoolParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDonateToCommunityPoolParamsWithHTTPClient(client *http.Client) *DonateToCommunityPoolParams {
	var ()
	return &DonateToCommunityPoolParams{
		HTTPClient: client,
	}
}

/*DonateToCommunityPoolParams contains all the parameters to send to the API endpoint
for the donate to community pool operation typically these are written to a http.Request
*/
type DonateToCommunityPoolParams struct {

	/*AccAddress
	  Account address of the user

	*/
	AccAddress string
	/*Amount
	  Amount of cet to donate

	*/
	Amount DonateToCommunityPoolBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the donate to community pool params
func (o *DonateToCommunityPoolParams) WithTimeout(timeout time.Duration) *DonateToCommunityPoolParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the donate to community pool params
func (o *DonateToCommunityPoolParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the donate to community pool params
func (o *DonateToCommunityPoolParams) WithContext(ctx context.Context) *DonateToCommunityPoolParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the donate to community pool params
func (o *DonateToCommunityPoolParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the donate to community pool params
func (o *DonateToCommunityPoolParams) WithHTTPClient(client *http.Client) *DonateToCommunityPoolParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the donate to community pool params
func (o *DonateToCommunityPoolParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccAddress adds the accAddress to the donate to community pool params
func (o *DonateToCommunityPoolParams) WithAccAddress(accAddress string) *DonateToCommunityPoolParams {
	o.SetAccAddress(accAddress)
	return o
}

// SetAccAddress adds the accAddress to the donate to community pool params
func (o *DonateToCommunityPoolParams) SetAccAddress(accAddress string) {
	o.AccAddress = accAddress
}

// WithAmount adds the amount to the donate to community pool params
func (o *DonateToCommunityPoolParams) WithAmount(amount DonateToCommunityPoolBody) *DonateToCommunityPoolParams {
	o.SetAmount(amount)
	return o
}

// SetAmount adds the amount to the donate to community pool params
func (o *DonateToCommunityPoolParams) SetAmount(amount DonateToCommunityPoolBody) {
	o.Amount = amount
}

// WriteToRequest writes these params to a swagger request
func (o *DonateToCommunityPoolParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param accAddress
	if err := r.SetPathParam("accAddress", o.AccAddress); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.Amount); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
