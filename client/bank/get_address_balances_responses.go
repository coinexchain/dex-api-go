// Code generated by go-swagger; DO NOT EDIT.

package bank

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/coinexchain/dex-api-go/models"
)

// GetAddressBalancesReader is a Reader for the GetAddressBalances structure.
type GetAddressBalancesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAddressBalancesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAddressBalancesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetAddressBalancesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetAddressBalancesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAddressBalancesOK creates a GetAddressBalancesOK with default headers values
func NewGetAddressBalancesOK() *GetAddressBalancesOK {
	return &GetAddressBalancesOK{}
}

/*GetAddressBalancesOK handles this case with default header values.

Account balances
*/
type GetAddressBalancesOK struct {
	Payload *GetAddressBalancesOKBody
}

func (o *GetAddressBalancesOK) Error() string {
	return fmt.Sprintf("[GET /bank/balances/{address}][%d] getAddressBalancesOK  %+v", 200, o.Payload)
}

func (o *GetAddressBalancesOK) GetPayload() *GetAddressBalancesOKBody {
	return o.Payload
}

func (o *GetAddressBalancesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAddressBalancesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAddressBalancesNoContent creates a GetAddressBalancesNoContent with default headers values
func NewGetAddressBalancesNoContent() *GetAddressBalancesNoContent {
	return &GetAddressBalancesNoContent{}
}

/*GetAddressBalancesNoContent handles this case with default header values.

There is no data for the requested account
*/
type GetAddressBalancesNoContent struct {
}

func (o *GetAddressBalancesNoContent) Error() string {
	return fmt.Sprintf("[GET /bank/balances/{address}][%d] getAddressBalancesNoContent ", 204)
}

func (o *GetAddressBalancesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAddressBalancesInternalServerError creates a GetAddressBalancesInternalServerError with default headers values
func NewGetAddressBalancesInternalServerError() *GetAddressBalancesInternalServerError {
	return &GetAddressBalancesInternalServerError{}
}

/*GetAddressBalancesInternalServerError handles this case with default header values.

Server internal error
*/
type GetAddressBalancesInternalServerError struct {
}

func (o *GetAddressBalancesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /bank/balances/{address}][%d] getAddressBalancesInternalServerError ", 500)
}

func (o *GetAddressBalancesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetAddressBalancesOKBody get address balances o k body
swagger:model GetAddressBalancesOKBody
*/
type GetAddressBalancesOKBody struct {

	// height
	// Required: true
	Height *string `json:"height"`

	// result
	// Required: true
	Result *GetAddressBalancesOKBodyResult `json:"result"`
}

// Validate validates this get address balances o k body
func (o *GetAddressBalancesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHeight(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAddressBalancesOKBody) validateHeight(formats strfmt.Registry) error {

	if err := validate.Required("getAddressBalancesOK"+"."+"height", "body", o.Height); err != nil {
		return err
	}

	return nil
}

func (o *GetAddressBalancesOKBody) validateResult(formats strfmt.Registry) error {

	if err := validate.Required("getAddressBalancesOK"+"."+"result", "body", o.Result); err != nil {
		return err
	}

	if o.Result != nil {
		if err := o.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAddressBalancesOK" + "." + "result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAddressBalancesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAddressBalancesOKBody) UnmarshalBinary(b []byte) error {
	var res GetAddressBalancesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAddressBalancesOKBodyResult get address balances o k body result
swagger:model GetAddressBalancesOKBodyResult
*/
type GetAddressBalancesOKBodyResult struct {

	// coins
	// Required: true
	Coins []*models.Coin `json:"coins"`

	// frozen coins
	// Required: true
	FrozenCoins []*models.Coin `json:"frozen_coins"`

	// locked coins
	// Required: true
	LockedCoins []*models.LockedCoin `json:"locked_coins"`
}

// Validate validates this get address balances o k body result
func (o *GetAddressBalancesOKBodyResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCoins(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFrozenCoins(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLockedCoins(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAddressBalancesOKBodyResult) validateCoins(formats strfmt.Registry) error {

	if err := validate.Required("getAddressBalancesOK"+"."+"result"+"."+"coins", "body", o.Coins); err != nil {
		return err
	}

	for i := 0; i < len(o.Coins); i++ {
		if swag.IsZero(o.Coins[i]) { // not required
			continue
		}

		if o.Coins[i] != nil {
			if err := o.Coins[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAddressBalancesOK" + "." + "result" + "." + "coins" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetAddressBalancesOKBodyResult) validateFrozenCoins(formats strfmt.Registry) error {

	if err := validate.Required("getAddressBalancesOK"+"."+"result"+"."+"frozen_coins", "body", o.FrozenCoins); err != nil {
		return err
	}

	for i := 0; i < len(o.FrozenCoins); i++ {
		if swag.IsZero(o.FrozenCoins[i]) { // not required
			continue
		}

		if o.FrozenCoins[i] != nil {
			if err := o.FrozenCoins[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAddressBalancesOK" + "." + "result" + "." + "frozen_coins" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetAddressBalancesOKBodyResult) validateLockedCoins(formats strfmt.Registry) error {

	if err := validate.Required("getAddressBalancesOK"+"."+"result"+"."+"locked_coins", "body", o.LockedCoins); err != nil {
		return err
	}

	for i := 0; i < len(o.LockedCoins); i++ {
		if swag.IsZero(o.LockedCoins[i]) { // not required
			continue
		}

		if o.LockedCoins[i] != nil {
			if err := o.LockedCoins[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAddressBalancesOK" + "." + "result" + "." + "locked_coins" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAddressBalancesOKBodyResult) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAddressBalancesOKBodyResult) UnmarshalBinary(b []byte) error {
	var res GetAddressBalancesOKBodyResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
