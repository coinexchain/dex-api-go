// Code generated by go-swagger; DO NOT EDIT.

package bank

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/coinexchain/dex-api-go/models"
)

// TransferSupervisedCoinsReader is a Reader for the TransferSupervisedCoins structure.
type TransferSupervisedCoinsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TransferSupervisedCoinsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTransferSupervisedCoinsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTransferSupervisedCoinsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTransferSupervisedCoinsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTransferSupervisedCoinsOK creates a TransferSupervisedCoinsOK with default headers values
func NewTransferSupervisedCoinsOK() *TransferSupervisedCoinsOK {
	return &TransferSupervisedCoinsOK{}
}

/*TransferSupervisedCoinsOK handles this case with default header values.

Tx was succesfully generated
*/
type TransferSupervisedCoinsOK struct {
	Payload *models.StdTx
}

func (o *TransferSupervisedCoinsOK) Error() string {
	return fmt.Sprintf("[POST /bank/accounts/{address}/supervised_transfers][%d] transferSupervisedCoinsOK  %+v", 200, o.Payload)
}

func (o *TransferSupervisedCoinsOK) GetPayload() *models.StdTx {
	return o.Payload
}

func (o *TransferSupervisedCoinsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StdTx)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTransferSupervisedCoinsBadRequest creates a TransferSupervisedCoinsBadRequest with default headers values
func NewTransferSupervisedCoinsBadRequest() *TransferSupervisedCoinsBadRequest {
	return &TransferSupervisedCoinsBadRequest{}
}

/*TransferSupervisedCoinsBadRequest handles this case with default header values.

Invalid request
*/
type TransferSupervisedCoinsBadRequest struct {
}

func (o *TransferSupervisedCoinsBadRequest) Error() string {
	return fmt.Sprintf("[POST /bank/accounts/{address}/supervised_transfers][%d] transferSupervisedCoinsBadRequest ", 400)
}

func (o *TransferSupervisedCoinsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTransferSupervisedCoinsInternalServerError creates a TransferSupervisedCoinsInternalServerError with default headers values
func NewTransferSupervisedCoinsInternalServerError() *TransferSupervisedCoinsInternalServerError {
	return &TransferSupervisedCoinsInternalServerError{}
}

/*TransferSupervisedCoinsInternalServerError handles this case with default header values.

Server internal error
*/
type TransferSupervisedCoinsInternalServerError struct {
}

func (o *TransferSupervisedCoinsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /bank/accounts/{address}/supervised_transfers][%d] transferSupervisedCoinsInternalServerError ", 500)
}

func (o *TransferSupervisedCoinsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*TransferSupervisedCoinsBody transfer supervised coins body
swagger:model TransferSupervisedCoinsBody
*/
type TransferSupervisedCoinsBody struct {

	// amount
	// Required: true
	Amount *models.Coin `json:"amount"`

	// base req
	// Required: true
	BaseReq *models.BaseReq `json:"base_req"`

	// Operation type (create: 0; return: 1; unlock-by-sender: 2; unlock-by-supervisor: 3)
	// Required: true
	Operation *int64 `json:"operation"`

	// reward
	Reward string `json:"reward,omitempty"`

	// The supervised amount sender's address (required when return or unlock-by-supervisor)
	Sender string `json:"sender,omitempty"`

	// The supervisor's address (required when create or unlock-by-sender if there is a supervisor)
	Supervisor string `json:"supervisor,omitempty"`

	// unlock time
	// Required: true
	UnlockTime *string `json:"unlock_time"`
}

// Validate validates this transfer supervised coins body
func (o *TransferSupervisedCoinsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBaseReq(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOperation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUnlockTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *TransferSupervisedCoinsBody) validateAmount(formats strfmt.Registry) error {

	if err := validate.Required("post_tx_body"+"."+"amount", "body", o.Amount); err != nil {
		return err
	}

	if o.Amount != nil {
		if err := o.Amount.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("post_tx_body" + "." + "amount")
			}
			return err
		}
	}

	return nil
}

func (o *TransferSupervisedCoinsBody) validateBaseReq(formats strfmt.Registry) error {

	if err := validate.Required("post_tx_body"+"."+"base_req", "body", o.BaseReq); err != nil {
		return err
	}

	if o.BaseReq != nil {
		if err := o.BaseReq.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("post_tx_body" + "." + "base_req")
			}
			return err
		}
	}

	return nil
}

func (o *TransferSupervisedCoinsBody) validateOperation(formats strfmt.Registry) error {

	if err := validate.Required("post_tx_body"+"."+"operation", "body", o.Operation); err != nil {
		return err
	}

	return nil
}

func (o *TransferSupervisedCoinsBody) validateUnlockTime(formats strfmt.Registry) error {

	if err := validate.Required("post_tx_body"+"."+"unlock_time", "body", o.UnlockTime); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *TransferSupervisedCoinsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *TransferSupervisedCoinsBody) UnmarshalBinary(b []byte) error {
	var res TransferSupervisedCoinsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
